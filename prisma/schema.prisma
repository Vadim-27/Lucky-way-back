// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Section {
  id       Int    @id @default(autoincrement())
  name     String
  posts    Post[]
}

model Post {
  id           Int         @id @default(autoincrement())
  country_id   Int? 
  section_id   Int?
  translations PostTranslation[]
  images       Image[]
  country      Country?    @relation(fields: [country_id], references: [id])
  section      Section?    @relation(fields: [section_id], references: [id]) // Додаємо зв'язок з Section
}

model PostTranslation {
  id          Int     @id @default(autoincrement())
  post_id     Int
  language_id Int
  title        String
  description String
  post       Post    @relation(fields: [post_id], references: [id], onDelete: Cascade) 
  language    Language   @relation(fields: [language_id], references: [id]) // Зв'язок з Language
}

model User {
  id          Int     @id @default(autoincrement())
  first_name  String
  last_name   String
  middle_name String?  // Необов'язкове поле
  email       String   @unique
  car_number  String?
  photo       String?  // Необов'язкове поле
  birthday    DateTime? // Необов'язкове поле
  gender      String?  // Необов'язкове поле
  role        Role     @default(USER) // Поле для зберігання ролі користувача
  orders      UserOrder[]
  password    String
  accessToken String?
  refreshToken String?
}

model UserOrder {
  id             Int      @id @default(autoincrement())
  user_id        Int
  purchase_date  DateTime
  operation_type String
  amount         Decimal
  car_number     String
  user           User     @relation(fields: [user_id], references: [id])
}

model Country {
  id             Int     @id @default(autoincrement())
  name           String
  iso3           String
  iso2           String
  numeric_code   String
  phone_code     String
  capital        String?
  currency       String?
  currency_name  String?
  currency_symbol String?
  tld            String?
  native         String?
  region         String?
  region_id      String?
  subregion      String?
  subregion_id   String?
  nationality    String?
  latitude       Float?
  longitude      Float?
  emoji          String?
  emojiU         String?
  timezones      Json?
  translations   Json?
  flag           String?
  geoData        String?
  has_toll_roads Boolean
  toll_roads     TollRoad[]
  regions        Region[]
  vingettes      VingetteOption[]
  images         Image[]

  // Додаємо зворотне відношення
  posts          Post[]   // Додаємо зворотне відношення до Post
}


model Image {
  id         Int     @id @default(autoincrement())
  url        String  // Посилання на зображення
  post_id    Int?    // Зовнішній ключ для Post
  country_id Int?    // Зовнішній ключ для Country
  post    Post? @relation(fields: [post_id], references: [id]) // Зв'язок з Post
  country    Country? @relation(fields: [country_id], references: [id]) // Зв'язок з Country
}

model TollRoad {
  id            Int           @id @default(autoincrement())
  country_id    Int
  toll_type     String
  coordinates   String?       // Необов'язкове поле
  name          String
  description   String
  cost          Decimal
  country       Country        @relation(fields: [country_id], references: [id])
  vehicle_types VehicleType[]  // Зв'язок з типами транспортних засобів
  vingettes     VingetteOption[] // Зв'язок з віньєтками
}

model VehicleType {
  id             Int           @id @default(autoincrement())
  toll_road_id   Int
  type           String
  description    String
  cost           Decimal
  toll_road      TollRoad      @relation(fields: [toll_road_id], references: [id])
  vingetteOptions VingetteOption[] // Додано зворотне відношення
}

model Region {
  id          Int     @id @default(autoincrement())
  country_id  Int
  name        String
  country     Country @relation(fields: [country_id], references: [id])
  cities      City[]
}

model City {
  id        Int     @id @default(autoincrement())
  region_id Int
  name      String
  region    Region  @relation(fields: [region_id], references: [id])
}

model VingetteOption {
  id             Int           @id @default(autoincrement())
  operation_type String
  period         String
  description    String
  link           String?       // Необов'язкове поле
  country_id     Int
  country        Country       @relation(fields: [country_id], references: [id])
  vehicle_type_id Int          // Зовнішній ключ
  vehicle_type   VehicleType   @relation(fields: [vehicle_type_id], references: [id]) // Зв'язок з VehicleType
  toll_road      TollRoad      @relation(fields: [toll_road_id], references: [id])    // Додано зв'язок з TollRoad
  toll_road_id   Int            // Зовнішній ключ для зв'язку з TollRoad
}

model Language {
  id    Int     @id @default(autoincrement())
  code  String  @unique // Наприклад, "en", "fr", "de"
  name  String
  sections PostTranslation[]
}


// Додаємо новий тип enum для ролей користувачів
enum Role {
  USER
  ADMIN
  GUEST
}
