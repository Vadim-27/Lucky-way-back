generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Section {
  id           Int                  @id @default(autoincrement())
  name         String
  posts        Post[]
  translations SectionTranslation[]
}

model SectionTranslation {
  id          Int      @id @default(autoincrement())
  sectionId   Int
  languageId  Int
  title       String
  description String?
  language    Language @relation(fields: [languageId], references: [id])
  section     Section  @relation(fields: [sectionId], references: [id])

  @@unique([sectionId, languageId])
}

model Post {
  id           Int               @id @default(autoincrement())
  country_id   Int?
  section_id   Int?
  images       Image[]
  country      Country?          @relation(fields: [country_id], references: [id])
  section      Section?          @relation(fields: [section_id], references: [id])
  translations PostTranslation[]
}

model PostTranslation {
  id          Int      @id @default(autoincrement())
  post_id     Int
  language_id Int
  title       String
  description String
  language    Language @relation(fields: [language_id], references: [id])
  post        Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)
}

model Language {
  id                  Int                  @id @default(autoincrement())
  code                String               @unique
  label               String
  name                String
  postTranslations    PostTranslation[]
  sectionTranslations SectionTranslation[]
}

model User {
  id           Int         @id @default(autoincrement())
  first_name   String
  last_name    String
  middle_name  String?
  email        String      @unique
  car_number   String?
  photo        String?
  birthday     DateTime?
  gender       String?
  role         Role        @default(USER)
  password     String
  accessToken  String?
  refreshToken String?
  orders       UserOrder[]
}

model UserOrder {
  id             Int      @id @default(autoincrement())
  user_id        Int
  purchase_date  DateTime
  operation_type String
  amount         Decimal
  car_number     String
  user           User     @relation(fields: [user_id], references: [id])
}

model Country {
  id              Int              @id @default(autoincrement())
  name            String
  iso3            String
  iso2            String
  numeric_code    String
  phone_code      String
  capital         String?
  currency        String?
  currency_name   String?
  currency_symbol String?
  tld             String?
  native          String?
  region          String?
  region_id       String?
  subregion       String?
  subregion_id    String?
  nationality     String?
  latitude        Float?
  longitude       Float?
  emoji           String?
  emojiU          String?
  timezones       Json?
  translations    Json?
  flag            String?
  geoData         String?
  has_toll_roads  Boolean
  images          Image[]
  posts           Post[]
  regions         Region[]
  toll_roads      TollRoad[]
  vingettes       VingetteOption[]
}

model Image {
  id         Int      @id @default(autoincrement())
  url        String
  post_id    Int?
  country_id Int?
  country    Country? @relation(fields: [country_id], references: [id])
  post       Post?    @relation(fields: [post_id], references: [id])
}

model TollRoad {
  id            Int              @id @default(autoincrement())
  country_id    Int
  toll_type     String
  coordinates   String?
  name          String
  description   String
  cost          Decimal
  country       Country          @relation(fields: [country_id], references: [id])
  vehicle_types VehicleType[]
  vingettes     VingetteOption[]
}

model VehicleType {
  id              Int              @id @default(autoincrement())
  toll_road_id    Int
  type            String
  description     String
  cost            Decimal
  toll_road       TollRoad         @relation(fields: [toll_road_id], references: [id])
  vingetteOptions VingetteOption[]
}

model Region {
  id         Int     @id @default(autoincrement())
  country_id Int
  name       String
  cities     City[]
  country    Country @relation(fields: [country_id], references: [id])
}

model City {
  id        Int    @id @default(autoincrement())
  region_id Int
  name      String
  region    Region @relation(fields: [region_id], references: [id])
}

model VingetteOption {
  id              Int         @id @default(autoincrement())
  operation_type  String
  period          String
  description     String
  link            String?
  country_id      Int
  vehicle_type_id Int
  toll_road_id    Int
  country         Country     @relation(fields: [country_id], references: [id])
  toll_road       TollRoad    @relation(fields: [toll_road_id], references: [id])
  vehicle_type    VehicleType @relation(fields: [vehicle_type_id], references: [id])
}

enum Role {
  USER
  ADMIN
  GUEST
}
